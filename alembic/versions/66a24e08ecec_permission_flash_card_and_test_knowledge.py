"""permission, flash card and test knowledge

Revision ID: 66a24e08ecec
Revises: 
Create Date: 2025-06-10 13:41:27.791101

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '66a24e08ecec'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('flash_card',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('word', sa.String(length=255), nullable=False),
    sa.Column('translate', sa.String(length=255), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flash_card_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hash_identifier', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hash_identifier')
    )
    op.create_table('test_knowledge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('planned_start', sa.DateTime(), nullable=True),
    sa.Column('user_identifier', sa.String(length=255), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('association_knowledge_flash_card',
    sa.Column('left_id', sa.Integer(), nullable=False),
    sa.Column('right_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['left_id'], ['test_knowledge.id'], ),
    sa.ForeignKeyConstraint(['right_id'], ['flash_card.id'], ),
    sa.PrimaryKeyConstraint('left_id', 'right_id')
    )
    op.create_table('association_user_user_group',
    sa.Column('user', sa.Integer(), nullable=True),
    sa.Column('groups', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['groups'], ['user_groups.id'], ),
    sa.ForeignKeyConstraint(['user'], ['flash_card_user.id'], )
    )
    op.create_table('user_group_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_group_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_group_id'], ['user_groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_group_roles')
    op.drop_table('association_user_user_group')
    op.drop_table('association_knowledge_flash_card')
    op.drop_table('user_groups')
    op.drop_table('test_knowledge')
    op.drop_table('flash_card_user')
    op.drop_table('flash_card')
    # ### end Alembic commands ###
